name: Java CI - Merge & Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout
      id-token: write # This is required for the OIDC token
    outputs:
      baseImageName: ${{ steps.mvn_deploy.outputs.baseImageName }}
      ociImage: ${{ steps.mvn_deploy.outputs.ociImage }}
      imageTag: ${{ steps.mvn_deploy.outputs.imageTag }}
      imageDigest: ${{ steps.mvn_deploy.outputs.imageDigest }}
      repo: develocitytia.jfrog.io/${{ steps.mvn_deploy.outputs.repo }}

    env:
      MAVEN_ARGS: -V -B --no-transfer-progress

    steps:
      - uses: actions/checkout@v4

      - uses: jfrog/setup-jfrog-cli@v4
        id: jfrog
        env:
          JF_URL: https://develocitytia.jfrog.io
        with:
          oidc-provider-name: github
          disable-job-summary: true

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: zulu
          server-id: artifactory
          server-username: JFROG_USER
          server-password: JFROG_PASSWORD

      - name: Setup Maven
        uses: gradle/develocity-actions/setup-maven@v1.4

      - name: Build with Maven
        id: mvn_deploy
        run: ./mvnw deploy
        env:
          JFROG_USER: ${{ steps.jfrog.outputs.oidc-user }}
          JFROG_PASSWORD: ${{ steps.jfrog.outputs.oidc-token }}
          CI_ID: ${{ github.run_id }}-${{ github.run_attempt }} # Used to make docker tags unique for demo
        # This step writes outputs via .mvn/develocity-custom-user-data.groovy (to be used in the next step)

      - uses: gradle/develocity-provenance-governor-actions/publish@main
        with:
          attestation-publisher-url: 'https://cavendish.sdlc-demo.gradle.com'
          tenant: default
          build-scan-queries: 'value:"CI run=${{ github.run_id }}"'
          subject-name: ${{ steps.mvn_deploy.outputs.baseImageName }}
          subject-version: ${{ steps.mvn_deploy.outputs.imageTag }}
          subject-digest: ${{ steps.mvn_deploy.outputs.imageDigest }}
          subject-type: oci
          subject-repository-url: develocitytia.jfrog.io/docker-trial

      - name: Output OCI Pull URL to Summary
        run: |
          echo "## OCI Image Pull Information" >> $GITHUB_STEP_SUMMARY
          echo "\`docker pull develocitytia.jfrog.io/${{ steps.mvn_deploy.outputs.repo }}/${{ steps.mvn_deploy.outputs.baseImageName }}:${{ steps.mvn_deploy.outputs.imageTag }}@sha256:${{ steps.mvn_deploy.outputs.imageDigest }}\`" >> $GITHUB_STEP_SUMMARY

  asyc-qa:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger QA Testing Event
        run: |
          # start async workflow
          gh workflow run qa.yaml \
            --repo 'dv-demos/qa-payment-calculator' \
            --ref 'main' \
            --raw-field image_purl="${{ needs.build.outputs.ociImage }}" \
            --raw-field image_sha256="${{ needs.build.outputs.imageDigest }}" \
            --raw-field image_repo_url="${{ needs.build.outputs.repo }}" \
            --raw-field image_name="${{ needs.build.outputs.baseImageName }}" \
            --raw-field image_tag="${{ needs.build.outputs.imageTag }}"
          
          cat << EOF > ${GITHUB_STEP_SUMMARY}
          ## QA Testing and Policy Job Started

          [View History](https://github.com/dv-demos/qa-payment-calculator/actions/workflows/qa.yaml)

          EOF
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_PAT }}
